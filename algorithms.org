** Canary Test 
   
#+BEGIN_SRC js :noweb yes :tangle ./tests/canary.js
const expect = require("/home/erretres/mocha_chai/node_modules/chai/chai.js").expect;

describe("canary", function() {
  it("should pass this canary test", function() {
    expect(true).to.be.true;
  });
});

#+END_SRC


*** Results

#+BEGIN_SRC sh :results value verbatim :exports results
node /home/erretres/mocha_chai/node_modules/mocha/bin/mocha ./tests/canary.js
echo ''
#+END_SRC

#+RESULTS:
: 
: 
:   canary
:     ✓ should pass this canary test
: 
: 
:   1 passing (10ms)
: 
: 



#+BEGIN_SRC js  :noweb yes :tangle ./tests/timing_tape.js
var test = require("/home/erretres/mocha_chai/node_modules/tape");

test('timing test', function (t) {
    
    t.plan(2);
    t.equal(typeof Date.now, 'function');

    var start = Date.now();

    setTimeout(function () {
        t.equal(Date.now() - start, 100);
    }, 100);
});
#+END_SRC


#+BEGIN_SRC sh :results value verbatim  :exports results
node ./tests/timing_tape.js;
echo '' 
#+END_SRC


#+RESULTS:
#+begin_example
TAP version 13
# timing test
ok 1 should be equal
not ok 2 should be equal
  ---
    operator: equal
    expected: 100
    actual:   102
    at: Timeout._onTimeout (/home/erretres/Desktop/MISC_PROJECTS/FCC_algorithm/tests/timing_tape.js:12:11)
    stack: |-
      Error: should be equal
          at Test.assert [as _assert] (/home/erretres/mocha_chai/node_modules/tape/lib/test.js:224:54)
          at Test.bound [as _assert] (/home/erretres/mocha_chai/node_modules/tape/lib/test.js:76:32)
          at Test.equal (/home/erretres/mocha_chai/node_modules/tape/lib/test.js:384:10)
          at Test.bound [as equal] (/home/erretres/mocha_chai/node_modules/tape/lib/test.js:76:32)
          at Timeout._onTimeout (/home/erretres/Desktop/MISC_PROJECTS/FCC_algorithm/tests/timing_tape.js:12:11)
          at ontimeout (timers.js:466:11)
          at tryOnTimeout (timers.js:304:5)
          at Timer.listOnTimeout (timers.js:267:5)
  ...

1..2
# tests 2
# pass  1
# fail  1


#+end_example



**  [[https://learn.freecodecamp.org/javascript-algorithms-and-data-structures/basic-algorithm-scripting][Basic algorithm scripting]]


*** [[https://learn.freecodecamp.org/javascript-algorithms-and-data-structures/basic-algorithm-scripting/convert-celsius-to-fahrenheit][Convert Celsius to Fahrenheit]]


**** Description  

#+BEGIN_QUOTE
The algorithm to convert from Celsius to Fahrenheit is the temperature 
in Celsius times 9/5, plus 32.

You are given a variable celsius representing a temperature in Celsius. 
Use the variable fahrenheit already defined and assign it the Fahrenheit temperature
equivalent to the given Celsius temperature. 

Use the algorithm mentioned above to help convert the Celsius temperature to Fahrenheit.

Don't worry too much about the function and return statements as they will be covered in future challenges. For now, only use operators that you have already learned.
#+END_QUOTE   


**** Tests 

#+BEGIN_QUOTE
convertToF(0)   should return a number

convertToF(0)   should return a value  of  32

convertToF(30)  should return a value  of  86

convertToF(-30) should return a value  of -22

convertToF(-10) should return a value  of  14

convertToF(20)  should return a value  of  68
#+END_QUOTE



**** Function

#+BEGIN_SRC js :noweb yes :tangle ./functions/convertToF.js 
/**
 * 
 * @param   {number}  celsius 
 * @returns {number}  number 
 */

function convertToF(celsius) {
  let fahrenheit = 32;
  return  (celsius * 9/5) + fahrenheit;
}

module.exports = convertToF;

#+END_SRC


**** Mocha/Chai

#+BEGIN_SRC js :noweb yes :tangle ./tests/convertToF.js
const expect = require("/home/erretres/mocha_chai/node_modules/chai/chai.js").expect;

let convertToF = require("/home/erretres/Desktop/MISC_PROJECTS/FCC_algorithm/functions/convertToF.js");

describe("converToF.js", function() {

  it("should return a number when parameter is 0", function() {

  let value = convertToF(0);  

  expect(value).to.be.an('number')
  });

  it("should return a value of 32 when parameter is 0", function() {
  let value = convertToF(0);  
  expect(value).to.equal(32);
  });


  it("should return a value of 86 when parameter is 30 ", function() {
   let value = convertToF(30);  
   expect(value).to.equal(86);
  });
 
  it("should return a value of -22 when parameter is -30", function() {
   let value = convertToF(-30);  
   expect(value).to.equal(-22);
  });

   it("should return a value of 14  when parameter is -10", function() {
   let value = convertToF(-10);  
   expect(value).to.equal(14);
  });
  
   it("should return a value of 68  when parameter is 20", function() {
   let value = convertToF(20);  
   expect(value).to.equal(68);
  });
 
});

#+END_SRC

#+RESULTS:
    
#+BEGIN_SRC sh :results value verbatim :exports results
node /home/erretres/mocha_chai/node_modules/mocha/bin/mocha ./tests/convertToF.js
echo ''
#+END_SRC

#+RESULTS:
#+begin_example


  converToF.js
    ✓ should return a number when parameter is 0
    ✓ should return a value of 32 when parameter is 0
    ✓ should return a value of 86 when parameter is 30 
    ✓ should return a value of -22 when parameter is -30
    ✓ should return a value of 14  when parameter is -10
    ✓ should return a value of 68  when parameter is 20


  6 passing (12ms)


#+end_example



**** Tape 

#+BEGIN_SRC js :mkdirp yes :noweb yes :tangle ./tests/convertToF_tape.js
var test = require("/home/erretres/mocha_chai/node_modules/tape");
let convertToF = require("/home/erretres/Desktop/MISC_PROJECTS/FCC_algorithm/functions/convertToF.js");

test('convertToF test', function (t) {

// t.plan(1);

 t.equal(typeof convertToF(0),'number' ,'convertToF(0) should be a number' );
 t.equal(convertToF(0)   ,32,  "convertToF(0)   should return a value  of  32");
 t.equal(convertToF(30)  ,86,  "convertToF(30)  should return a value  of  86");
 t.equal(convertToF(-30) ,-22, "convertToF(-30) should return a value  of -22");
 t.equal(convertToF(-10) ,14,  "convertToF(-10) should return a value  of  14");
 t.equal(convertToF(20)  ,68,  "convertToF(20)  should return a value  of  68");
 t.end(err); 

});



#+END_SRC

   

#+BEGIN_SRC sh :results value verbatim  :exports results
node /home/erretres/mocha_chai/node_modules/mocha/bin/mocha ./tests/convertToF_tape.js
echo ''
#+END_SRC 

#+RESULTS:
#+begin_example


  0 passing (2ms)

TAP version 13
# convertToF test
ok 1 convertToF(0) should be a number
ok 2 convertToF(0) should return a value of 32
ok 3 convertToF(30) should return a value of 86
ok 4 convertToF(-30) should return a value of -22
ok 5 convertToF(-10) should return a value of 14
ok 6 convertToF(20) should return a value of 68

#+end_example
